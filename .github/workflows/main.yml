name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install sshpass
      run: sudo apt-get -y install sshpass

    - name: SSH into Server and remove old code
      run: |
        sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no -p 27001 martinaskolin@130.240.207.20 << EOF
          sudo rm -r D7024E-Group-3
        EOF
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}

    - name: Copy Code to Server
      run: |
        sshpass -p ${{ secrets.SSH_PASSWORD }} scp -o StrictHostKeyChecking=no -r -P 27001 $GITHUB_WORKSPACE/ martinaskolin@130.240.207.20:/home/martinaskolin/
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}

    - name: SSH into Server and Execute Docker Commands
      run: |
        sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no -p 27001 martinaskolin@130.240.207.20 << EOF
          cd D7024E-Group-3

          # Step 1: Remove the Docker stack
          sudo docker stack rm kademliaStack

          # Step 2: Wait for the stack to be removed (optional but recommended)
          while [[ "$(sudo docker stack ls --filter name=kademliaStack -q)" != "" ]]; do
            sleep 5
          done

          # Step 3: List all containers associated with the stack and remove them
          sudo docker rm -f $(sudo docker container ls -q --filter "label=com.docker.stack.namespace=kademliaStack")

          # Step 4: Remove unused images (optional but recommended)
          sudo docker image prune -f

          # Step 5: Build the new Docker image
          sudo docker build . -t kadlab

          # Step 6: Deploy the Docker stack using the updated docker-compose.yml
          sudo docker stack deploy -c docker-compose.yml kademliaStack
        EOF
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
